doctype html
html
  head
    meta(charset='utf-8')
    meta(name='viewport', content='width=device-width, initial-scale=1, maximum-scale=1')
    title A Talk With No Name

    link(rel='stylesheet', type='text/css', href='build/build.css')
  
  style.
    .me {
      background-image: url('images/me.jpg')
    }
    .terrifying {
      background-image: url('images/terrifying.jpg')
    }
    .serious {
      background-image: url('images/serious.jpg')
    }
    .one {
      background-image: url('images/one.jpg')
    }

  body

    article

      section
        h1 A Talk With No Name

        <!-- Welcome to a talk that is so fresh and original, it doesn't even have a name yet. You are so lucky. Just like that horse in that song. You know, the horse with no name. Lucky horse. No name. No one can tell it what to do. It was a free spirit. No one was saying, "Hey, go faster, Mr. Ed, I've got a sprint planning meeting I'm late for!" No, instead, they're like, "I'd tell this horse to go faster but I don't know how to address this horse. I do not know this horse's name." That's like this talk. You cannot control it. So just let go! Let it take you wherever it wants to take you on its waves of bliss. Are you ready? Good. Here we go. -->

      section
        h2 
          em YOU
          span  Are Invited

        <!-- Actually, not having a title seemed both inhospitable and that Horse With No Name schpiel wasn't very funny. So here's the title I came up with. YOU are invited! -->

      section(data-bespoke-backdrop='me')
        h3 Yes, you!

        <!-- Yes, YOU! Oh, and all the images in this talk will be of Muppets because he's my daughter is big into Cookie Monster and Sesame Street right now. And I'm kind of making an assumption that Children's Television Workshop is not so litigious as to sue some idiot using Cookie Monster to illustrate a tech talk. And if they are, maybe I get to become some kind of weird cause célèbre. ANYWAY, what is it that you are invited to? We'll get to that in a moment. -->

      section
        h2 Let's talk about streams&hellip;
        
        <!-- First, streams. If you ever listen to Node core contributors talk about streams... -->

      section(data-bespoke-backdrop='me')
        h3 

        <!-- ...it is TERRIFYING. (Don't worry. There are other visuals in this talk besides this one. Stay with me.) But streams. It's like, "Yeah, only one person actually understands the streams code base. And actually, they don't understand it either. No one understands it." And then someone comes along and says, "Gosh, it's so complex, shouldn't we work on refactoring it to make it more understandable?" And eight other people say "DO. NOT. TOUCH. THE. STREAMS. CODE. Did you not hear us say that no one understands how it works?!" When you hear that sort of stuff, it makes approaching the Node.js code base intimidating.-->

      section
        h2 "I know! I'll run ESLint!""

        <!-- So then some well-meaning person decides, "I'd like to contribute to Node. But I'm not going to do something like even try to READ the streams code. I know! I'll run a JavaScript linting tool on the code base and submit fixes!" -->

      section(data-bespoke-backdrop='serious')

        <!-- So this is for all my Lint Peeps out there. Lint Peeps: I love you. But you gotta stop doing this. Here's the thing: Node already has a linter. We're not going to change the thousands of instances of `==` throughout the code to `===` just because Douglass Crockford thinks everyone should. And there are actually good reasons not to make those kinds of wholesale changes on a sprawling code base. -->

      section
        h2 About your moxie&hellip;

        <!-- But I like your moxie, Lint Peeps! So let me give you a better way! -->

      section(data-bespoke-backdrop='one')

        <!-- But, first; firstly; number one; before I do that, I am legally obligated to mention the good-first-contribution tag in the Node.js issue tracker. Go to the issue tracker and do a search for issues labeled good-first-contribution. And that's a fine thing to try to use. There can be challenges there, but it works pretty well. Go for that if that's your jam! But that's not what I'm going to talk about today. -->

      section
        h2 Tests!

        <!-- Dive into the test directory in Node.js source code and start reading and improving tests. The code tends to be approachable and you will learn all about whatever is being tested. You will find improvements or omissions and you can contribute those back to the community. I could end my talk here, but I have too many Muppet images so let's go on a bit. -->

      section
        h3 Why tests?

        <!-- Why are tests a good way to get started with the code? -->        

      section
        h2 Thank You
        h3 Rich Trott
        h4 @trott

    script(src='build/build.js')